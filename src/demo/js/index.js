
viewport = () => {
  let e = window
  let a = 'inner'
  if (!('innerWidth' in window)) {
    a = 'client'
    e = document.documentElement || document.body
  }
  return {width: e[a + 'Width'], height: e[a + 'Height']}
}

const ballVelocity = {
  tiltLR: 0,
  tiltFB: 0,
  arrowKeyLeftPressed: false,
  arrowKeyRightPressed: false,
  arrowKeyUpPressed: false,
  arrowKeyDownPressed: false
}

const deviceOrientationHandler = (e) => {

  if(ballVelocity.arrowKeyRightPressed || ballVelocity.arrowKeyLeftPressed || ballVelocity.arrowKeyUpPressed || ballVelocity.arrowKeyDownPressed)
    return

  // TODO delete offsets for production build
  const offsetLR = 0.9
  const offsetFB = 20.7
  const tiltLR = e.gamma - offsetLR // left-right
  const tiltFB = e.beta - offsetFB // up-down

  ballVelocity.tiltLR = tiltLR
  ballVelocity.tiltFB = tiltFB

}

const url = 'https://raw.githubusercontent.com/progers/pathseg/master/pathseg.js'
loadGitHubScript(url).then(function () {

  window.addEventListener('deviceorientation', deviceOrientationHandler, true)

  window.addEventListener('keydown', function(event) {
    const key = event.key; // "ArrowRight", "ArrowLeft", "ArrowUp", or "ArrowDown"



    switch(key) {
      case "ArrowRight":
        ballVelocity.arrowKeyRightPressed = true
        ballVelocity.tiltLR = 15
        break
      case "ArrowLeft":
        ballVelocity.arrowKeyLeftPressed = true
        ballVelocity.tiltLR = -15
        break
      case "ArrowDown":
        ballVelocity.arrowKeyDownPressed = true
        ballVelocity.tiltFB = 15
        break
      case "ArrowUp":
        ballVelocity.arrowKeyUpPressed = true
        ballVelocity.tiltFB = -15
        break
      default:
        break
    }

  })

  window.addEventListener('keyup', function(event) {
    const key = event.key; // "ArrowRight", "ArrowLeft", "ArrowUp", or "ArrowDown"

    switch(key) {
      case "ArrowRight":
        ballVelocity.arrowKeyRightPressed = false
        break
      case "ArrowLeft":
        ballVelocity.arrowKeyLeftPressed = false
        break
      case "ArrowDown":
        ballVelocity.arrowKeyDownPressed = false
        break
      case "ArrowUp":
        ballVelocity.arrowKeyUpPressed = false
        break
      default:
        break
    }
  })

// module aliases
  const Engine = Matter.Engine
  const  Render = Matter.Render
  const  World = Matter.World
  const  Bodies = Matter.Bodies
  const  Body = Matter.Body
  // const  Composites = Matter.Composites
  // const  Common = Matter.Common
  // const  Svg = Matter.Svg
  // const  Vertices = Matter.Vertices

// create an engine
  const engine = Engine.create()

// create a renderer
  const render = Render.create({
    element: document.body,
    engine: engine,
    options: {
      width: viewport().width,
      height: viewport().height,
      wireframes: false
    }
  })

  let points = JSON.parse('[[{"x":116.2,"y":49.7,"moveTo":true},{"x":119.3,"y":51.1},{"x":122.2,"y":53.6},{"x":132.2,"y":38.8},{"x":128.7,"y":36.8},{"x":121.49999999999999,"y":47.699999999999996},{"x":116.99999999999999,"y":45.699999999999996},{"x":119.39999999999999,"y":37.099999999999994},{"x":119,"y":31},{"x":150,"y":31.2},{"x":145.8,"y":35.1},{"x":145.20000000000002,"y":34.800000000000004},{"x":144.50000000000003,"y":34.6},{"x":143,"y":34.6},{"x":141.1,"y":35.4},{"x":139.5,"y":36.8},{"x":134.9,"y":44.3},{"x":131,"y":55.1},{"x":134.8,"y":56.4},{"x":140.4,"y":42.7},{"x":143,"y":39.2},{"x":143.8,"y":38.7},{"x":143.9,"y":38.7},{"x":144.20000000000002,"y":39},{"x":145.3,"y":40.8},{"x":146.3,"y":44.099999999999994},{"x":146.70000000000002,"y":47.8},{"x":150.70000000000002,"y":47.5},{"x":150.20000000000002,"y":43.2},{"x":148.9,"y":39.1},{"x":148.3,"y":38},{"x":153.3,"y":33.5},{"x":158.5,"y":30.3},{"x":158.7,"y":30.3},{"x":156.29999999999998,"y":36.1},{"x":155.89999999999998,"y":65.4},{"x":152.39999999999998,"y":63.60000000000001},{"x":148.89999999999998,"y":62.50000000000001},{"x":150.29999999999998,"y":58.20000000000001},{"x":150.6,"y":56.00000000000001},{"x":150.6,"y":54.00000000000001},{"x":146.6,"y":54.800000000000004},{"x":146.6,"y":56.300000000000004},{"x":145.6,"y":60.2},{"x":139,"y":69.60000000000001},{"x":138.4,"y":71.30000000000001},{"x":142.3,"y":72.4},{"x":142.70000000000002,"y":71.30000000000001},{"x":146.9,"y":66.00000000000001},{"x":151.4,"y":67.30000000000001},{"x":153.8,"y":68.50000000000001},{"x":155.8,"y":70.10000000000001},{"x":154.9,"y":74.4},{"x":153.20000000000002,"y":78.4},{"x":156.70000000000002,"y":80.4},{"x":159.10000000000002,"y":74.5},{"x":159.90000000000003,"y":39.9},{"x":161.80000000000004,"y":33.3},{"x":166.00000000000003,"y":27.699999999999996},{"x":172.60000000000002,"y":27.699999999999996},{"x":179.40000000000003,"y":29.499999999999996},{"x":221.5,"y":57},{"x":213.3,"y":61.7},{"x":209.7,"y":55},{"x":204.29999999999998,"y":48.3},{"x":201.39999999999998,"y":51.099999999999994},{"x":207.09999999999997,"y":58.3},{"x":210.39999999999998,"y":65.39999999999999},{"x":211.29999999999998,"y":72.39999999999999},{"x":209.79999999999998,"y":79.49999999999999},{"x":213.6,"y":80.89999999999999},{"x":215.29999999999998,"y":73.19999999999999},{"x":214.7,"y":65.6},{"x":224.89999999999998,"y":59.8},{"x":229.29999999999998,"y":65},{"x":230.7,"y":68},{"x":231.39999999999998,"y":71.4},{"x":231.09999999999997,"y":72.80000000000001},{"x":230.29999999999995,"y":74.20000000000002},{"x":229.09999999999997,"y":75.70000000000002},{"x":212.8,"y":86.5},{"x":204.20000000000002,"y":90.1},{"x":193.8,"y":72},{"x":203.5,"y":70.5},{"x":203.3,"y":66.5},{"x":189.9,"y":68.8},{"x":189.70000000000002,"y":70.2},{"x":189.70000000000002,"y":72.7},{"x":196.3,"y":86.3},{"x":202.5,"y":94.89999999999999},{"x":214,"y":90.8},{"x":229.8,"y":80.8},{"x":232.5,"y":78.39999999999999},{"x":246.1,"y":112},{"x":245.9,"y":127.8},{"x":237.9,"y":141.7},{"x":233.5,"y":145.2},{"x":228.8,"y":147.7},{"x":223.8,"y":149.1},{"x":218.60000000000002,"y":149.5},{"x":203.10000000000002,"y":146.9},{"x":199.70000000000002,"y":147.20000000000002},{"x":197.50000000000003,"y":148.60000000000002},{"x":196.10000000000002,"y":151.20000000000002},{"x":195.70000000000002,"y":153.70000000000002},{"x":196.10000000000002,"y":156.10000000000002},{"x":197.20000000000002,"y":158.8},{"x":191.10000000000002,"y":163.3},{"x":180.50000000000003,"y":152.10000000000002},{"x":182.60000000000002,"y":146.20000000000002},{"x":183.20000000000002,"y":140.00000000000003},{"x":193.10000000000002,"y":137.70000000000002},{"x":216.50000000000003,"y":137.10000000000002},{"x":224.20000000000002,"y":135.20000000000002},{"x":230.60000000000002,"y":131.70000000000002},{"x":232.60000000000002,"y":129.8},{"x":234.10000000000002,"y":127.70000000000002},{"x":235.10000000000002,"y":125.30000000000001},{"x":235.60000000000002,"y":122.60000000000001},{"x":235.00000000000003,"y":117.9},{"x":237.60000000000002,"y":116},{"x":234.90000000000003,"y":113},{"x":233.00000000000003,"y":114.4},{"x":224.10000000000002,"y":117.30000000000001},{"x":225.3,"y":121.20000000000002},{"x":231.10000000000002,"y":119.70000000000002},{"x":231.50000000000003,"y":122.60000000000002},{"x":231.20000000000002,"y":124.30000000000003},{"x":230.50000000000003,"y":125.90000000000002},{"x":229.50000000000003,"y":127.30000000000003},{"x":228.10000000000002,"y":128.60000000000002},{"x":222.40000000000003,"y":131.60000000000002},{"x":208.60000000000002,"y":133.60000000000002},{"x":197.50000000000003,"y":133.10000000000002},{"x":182.60000000000002,"y":135.90000000000003},{"x":181.3,"y":132.30000000000004},{"x":185.70000000000002,"y":128.50000000000003},{"x":188.60000000000002,"y":122.90000000000003},{"x":189.60000000000002,"y":116.20000000000003},{"x":188.70000000000002,"y":109.50000000000003},{"x":185.8,"y":103.80000000000003},{"x":182.60000000000002,"y":106.30000000000003},{"x":184.8,"y":110.80000000000003},{"x":185.5,"y":116.20000000000003},{"x":184.8,"y":121.50000000000003},{"x":182.60000000000002,"y":125.80000000000003},{"x":180.20000000000002,"y":128.10000000000002},{"x":177.50000000000003,"y":129.8},{"x":174.40000000000003,"y":130.9},{"x":170.40000000000003,"y":131.6},{"x":166.90000000000003,"y":126.1},{"x":162.70000000000005,"y":122.19999999999999},{"x":145.70000000000005,"y":113.49999999999999},{"x":143.80000000000004,"y":116.99999999999999},{"x":152.00000000000003,"y":120.89999999999999},{"x":150.90000000000003,"y":124.6},{"x":151.10000000000002,"y":142.79999999999998},{"x":155.10000000000002,"y":142.79999999999998},{"x":154.8,"y":125.69999999999999},{"x":155.70000000000002,"y":122.6},{"x":161.8,"y":126.5},{"x":164.3,"y":129.1},{"x":166.4,"y":132.5},{"x":164.4,"y":133.4},{"x":162.70000000000002,"y":134.70000000000002},{"x":161.50000000000003,"y":136.60000000000002},{"x":161.00000000000003,"y":139.10000000000002},{"x":165.00000000000003,"y":139.10000000000002},{"x":165.40000000000003,"y":137.8},{"x":166.50000000000003,"y":136.8},{"x":168.40000000000003,"y":136},{"x":177.70000000000005,"y":134},{"x":179.10000000000005,"y":140.1},{"x":178.30000000000004,"y":146.4},{"x":175.60000000000005,"y":152.3},{"x":171.60000000000005,"y":157.20000000000002},{"x":174.30000000000004,"y":160.20000000000002},{"x":178.40000000000003,"y":155.50000000000003},{"x":195,"y":173.1},{"x":198.4,"y":170.9},{"x":194,"y":166},{"x":199.9,"y":161.6},{"x":214.8,"y":168.7},{"x":213.10000000000002,"y":173.89999999999998},{"x":216.8,"y":175.49999999999997},{"x":219.20000000000002,"y":166.29999999999998},{"x":219.20000000000002,"y":161.79999999999998},{"x":218.50000000000003,"y":157.6},{"x":214.60000000000002,"y":158.7},{"x":215.20000000000002,"y":164.6},{"x":206.20000000000002,"y":160.79999999999998},{"x":202.50000000000003,"y":158.49999999999997},{"x":200.50000000000003,"y":156.29999999999998},{"x":199.80000000000004,"y":154.7},{"x":199.50000000000003,"y":153.29999999999998},{"x":199.70000000000002,"y":151.99999999999997},{"x":200.4,"y":150.69999999999996},{"x":202.3,"y":150.49999999999997},{"x":219.8,"y":153.19999999999996},{"x":225.20000000000002,"y":152.49999999999997},{"x":228.00000000000003,"y":161.59999999999997},{"x":225.80000000000004,"y":170.09999999999997},{"x":220.70000000000005,"y":177.39999999999998},{"x":210.80000000000004,"y":186.2},{"x":203.70000000000005,"y":190.5},{"x":196.10000000000005,"y":193.5},{"x":187.80000000000004,"y":194.6},{"x":178.70000000000005,"y":194.2},{"x":176.70000000000005,"y":194.6},{"x":174.90000000000003,"y":195.5},{"x":173.80000000000004,"y":196.6},{"x":173.00000000000003,"y":198.1},{"x":172.00000000000003,"y":202.6},{"x":172.00000000000003,"y":206.4},{"x":179.80000000000004,"y":225.3},{"x":183.40000000000003,"y":223.4},{"x":176.8,"y":209},{"x":176.10000000000002,"y":206.1},{"x":176.10000000000002,"y":203.1},{"x":176.70000000000002,"y":200.2},{"x":177.10000000000002,"y":199.29999999999998},{"x":177.60000000000002,"y":198.7},{"x":178.40000000000003,"y":198.29999999999998},{"x":188.10000000000002,"y":198.6},{"x":197.40000000000003,"y":197.4},{"x":205.70000000000005,"y":194.1},{"x":213.30000000000004,"y":189.5},{"x":226.30000000000004,"y":177.3},{"x":231.10000000000005,"y":168.4},{"x":232.10000000000005,"y":159.70000000000002},{"x":229.30000000000004,"y":151.3},{"x":235.00000000000003,"y":148.4},{"x":240.20000000000002,"y":144.3},{"x":249.60000000000002,"y":126.9},{"x":248.90000000000003,"y":107.80000000000001},{"x":234.90000000000003,"y":74.4},{"x":234.90000000000003,"y":74.4},{"x":235.30000000000004,"y":73},{"x":235.30000000000004,"y":71.5},{"x":234,"y":65.7},{"x":231.1,"y":60.900000000000006},{"x":219.1,"y":49.900000000000006},{"x":180.9,"y":26},{"x":174.9,"y":24.2},{"x":169,"y":23.7},{"x":163.2,"y":24.4},{"x":157.6,"y":26.299999999999997},{"x":111.39999999999999,"y":27.699999999999996},{"x":80.1,"y":35.4},{"x":53.099999999999994,"y":49.099999999999994},{"x":55.39999999999999,"y":52.49999999999999},{"x":81.6,"y":39.2},{"x":115,"y":31.4},{"x":115.4,"y":37},{"x":114.4,"y":41.5},{"x":96.2,"y":69.9},{"x":95.60000000000001,"y":69.9},{"x":84.10000000000001,"y":70.4},{"x":86.4,"y":64.7},{"x":89.7,"y":59.5},{"x":86.5,"y":57},{"x":82.3,"y":63.7},{"x":77.9,"y":78.6},{"x":76.6,"y":88.9},{"x":77.5,"y":109},{"x":76,"y":119.6},{"x":72.7,"y":128.7},{"x":76.2,"y":130.7},{"x":78,"y":126.6},{"x":81,"y":115.1},{"x":81.7,"y":99.69999999999999},{"x":80.8,"y":91.39999999999999},{"x":85.6,"y":93.19999999999999},{"x":87.3,"y":94.6},{"x":88.1,"y":96.39999999999999},{"x":89.39999999999999,"y":111.69999999999999},{"x":93.3,"y":110.69999999999999},{"x":92.5,"y":105.6},{"x":92.5,"y":105.6},{"x":97.5,"y":103.8},{"x":96,"y":99.9},{"x":92.2,"y":101.2},{"x":92.2,"y":96.1},{"x":90.8,"y":92.3},{"x":87.89999999999999,"y":89.7},{"x":84.3,"y":88.10000000000001},{"x":80.89999999999999,"y":87.2},{"x":82.99999999999999,"y":74.60000000000001},{"x":95.19999999999999,"y":73.80000000000001},{"x":95.69999999999999,"y":84.9},{"x":99.69999999999999,"y":84.7},{"x":99.1,"y":75.7},{"x":99.39999999999999,"y":73.3},{"x":100.19999999999999,"y":71},{"x":115.19999999999999,"y":49.5},{"x":116.2,"y":49.7}],[{"x":233.2,"y":106.2,"moveTo":true},{"x":231.1,"y":93.9},{"x":201,"y":104.1},{"x":179,"y":81.9},{"x":176.5,"y":77.5},{"x":182,"y":63.5},{"x":187.6,"y":54.5},{"x":194,"y":59},{"x":197.2,"y":56.6},{"x":175.6,"y":43.1},{"x":176.79999999999998,"y":40.800000000000004},{"x":177.49999999999997,"y":39.900000000000006},{"x":178.29999999999998,"y":39.300000000000004},{"x":176.29999999999998,"y":35.800000000000004},{"x":173.6,"y":38.300000000000004},{"x":171.7,"y":41.800000000000004},{"x":166.79999999999998,"y":62.60000000000001},{"x":170.6,"y":63.900000000000006},{"x":174.2,"y":47.10000000000001},{"x":184.1,"y":52.60000000000001},{"x":178.29999999999998,"y":61.900000000000006},{"x":166.9,"y":94.1},{"x":166.3,"y":99.89999999999999},{"x":155.10000000000002,"y":100.19999999999999},{"x":152.90000000000003,"y":93.69999999999999},{"x":150.20000000000005,"y":89.79999999999998},{"x":140.90000000000003,"y":82.19999999999999},{"x":136.50000000000003,"y":80.29999999999998},{"x":135.50000000000003,"y":84.59999999999998},{"x":139.10000000000002,"y":86.29999999999998},{"x":146.70000000000002,"y":92.59999999999998},{"x":148.8,"y":95.49999999999999},{"x":148.8,"y":95.49999999999999},{"x":131.8,"y":103.69999999999999},{"x":121.20000000000002,"y":106.39999999999999},{"x":117.40000000000002,"y":101.39999999999999},{"x":114.20000000000002,"y":95.39999999999999},{"x":112.10000000000002,"y":88.8},{"x":111.40000000000002,"y":82},{"x":116,"y":82},{"x":122.9,"y":98.1},{"x":137.4,"y":92.5},{"x":135.5,"y":88.9},{"x":125.1,"y":93.10000000000001},{"x":120,"y":81.6},{"x":122.2,"y":80.89999999999999},{"x":124.3,"y":79.89999999999999},{"x":127,"y":77.69999999999999},{"x":129,"y":74.69999999999999},{"x":130.4,"y":70.99999999999999},{"x":131.1,"y":66.49999999999999},{"x":127.1,"y":66.19999999999999},{"x":126.6,"y":69.69999999999999},{"x":125.6,"y":72.6},{"x":124.1,"y":74.89999999999999},{"x":122.19999999999999,"y":76.49999999999999},{"x":119.89999999999999,"y":77.49999999999999},{"x":114.69999999999999,"y":78.19999999999999},{"x":111.89999999999999,"y":78.19999999999999},{"x":112.89999999999999,"y":75.19999999999999},{"x":114.39999999999999,"y":72.49999999999999},{"x":116.39999999999999,"y":70.09999999999998},{"x":118.89999999999999,"y":67.99999999999999},{"x":116.6,"y":64.69999999999999},{"x":113.1,"y":67.79999999999998},{"x":110.39999999999999,"y":71.49999999999999},{"x":108.6,"y":75.69999999999999},{"x":107.6,"y":80.29999999999998},{"x":107.8,"y":87.99999999999999},{"x":109.8,"y":95.39999999999999},{"x":104.3,"y":97.89999999999999},{"x":105.39999999999999,"y":101.8},{"x":111.39999999999999,"y":99.2},{"x":116.89999999999999,"y":107.9},{"x":111.99999999999999,"y":109.30000000000001},{"x":95.9,"y":118},{"x":88.80000000000001,"y":125.4},{"x":79.80000000000001,"y":145.70000000000002},{"x":77.70000000000002,"y":144.10000000000002},{"x":75.3,"y":143},{"x":72.7,"y":142.5},{"x":69.9,"y":142.5},{"x":53.7,"y":147.2},{"x":48.900000000000006,"y":147.39999999999998},{"x":44.300000000000004,"y":146.59999999999997},{"x":40,"y":145},{"x":36.2,"y":142.4},{"x":43.5,"y":134.3},{"x":47.6,"y":137},{"x":52.300000000000004,"y":138.5},{"x":57.6,"y":138.8},{"x":63.5,"y":137.9},{"x":62.6,"y":134},{"x":57.2,"y":134.8},{"x":52.5,"y":134.4},{"x":48.4,"y":132.9},{"x":45,"y":130},{"x":42,"y":126.1},{"x":39.9,"y":121.69999999999999},{"x":39.1,"y":117.39999999999999},{"x":40,"y":113.69999999999999},{"x":42.6,"y":115.19999999999999},{"x":48.7,"y":122.19999999999999},{"x":53.6,"y":125.99999999999999},{"x":58.800000000000004,"y":127.49999999999999},{"x":61.00000000000001,"y":127.19999999999999},{"x":63.300000000000004,"y":126.39999999999999},{"x":65.30000000000001,"y":125.3},{"x":66.70000000000002,"y":124},{"x":63.500000000000014,"y":121.5},{"x":62.80000000000001,"y":122.1},{"x":60.10000000000001,"y":123.19999999999999},{"x":58.60000000000001,"y":123.39999999999999},{"x":55.60000000000001,"y":122.39999999999999},{"x":49,"y":116.5},{"x":46.4,"y":113.2},{"x":43.9,"y":111.10000000000001},{"x":36.4,"y":107.80000000000001},{"x":33.699999999999996,"y":107.20000000000002},{"x":33.4,"y":111.20000000000002},{"x":36.4,"y":112.00000000000001},{"x":35.199999999999996,"y":116.60000000000001},{"x":35.8,"y":121.60000000000001},{"x":37.8,"y":126.60000000000001},{"x":40.8,"y":131.20000000000002},{"x":33.5,"y":139.3},{"x":26,"y":125.7},{"x":23,"y":113},{"x":22.8,"y":101.2},{"x":26.3,"y":85.1},{"x":30.8,"y":75.5},{"x":33.9,"y":71},{"x":40.3,"y":75.7},{"x":35.699999999999996,"y":83.9},{"x":35,"y":86.3},{"x":35.4,"y":88.6},{"x":43,"y":101.9},{"x":46.6,"y":100},{"x":39.6,"y":88.3},{"x":39,"y":86.4},{"x":43.1,"y":78.60000000000001},{"x":50.7,"y":88.9},{"x":56.800000000000004,"y":114.10000000000001},{"x":60.800000000000004,"y":113.60000000000001},{"x":59.300000000000004,"y":103.80000000000001},{"x":66.9,"y":103.30000000000001},{"x":66.7,"y":111.70000000000002},{"x":70.7,"y":111.70000000000002},{"x":71,"y":94.6},{"x":69,"y":83.4},{"x":65.2,"y":84.80000000000001},{"x":66.7,"y":91.60000000000001},{"x":67.10000000000001,"y":99.4},{"x":58.60000000000001,"y":100},{"x":54.3,"y":87.2},{"x":51.4,"y":82.7},{"x":55.9,"y":77.4},{"x":57.699999999999996,"y":78.2},{"x":59.599999999999994,"y":78.7},{"x":61.699999999999996,"y":78.7},{"x":63.9,"y":78.4},{"x":68.2,"y":76.10000000000001},{"x":71.10000000000001,"y":72.30000000000001},{"x":73.9,"y":63.20000000000001},{"x":69.9,"y":62.50000000000001},{"x":68.7,"y":67.30000000000001},{"x":67.2,"y":71},{"x":65.3,"y":73.4},{"x":63,"y":74.6},{"x":60.3,"y":74.8},{"x":57,"y":73.4},{"x":53.2,"y":69.60000000000001},{"x":49,"y":62.5},{"x":45.4,"y":64.3},{"x":48.199999999999996,"y":69.5},{"x":52.599999999999994,"y":75.1},{"x":48.8,"y":79.39999999999999},{"x":43,"y":73},{"x":36.6,"y":68.1},{"x":48.8,"y":57.2},{"x":45.8,"y":54.5},{"x":30.2,"y":69.1},{"x":24.6,"y":78.3},{"x":20.4,"y":90.1},{"x":18.4,"y":104},{"x":19.299999999999997,"y":117.2},{"x":23,"y":129.6},{"x":29.5,"y":141},{"x":34.4,"y":146.1},{"x":40.4,"y":149.6},{"x":47.1,"y":151.4},{"x":54.2,"y":151.4},{"x":70.5,"y":146.70000000000002},{"x":73.1,"y":146.70000000000002},{"x":75.3,"y":147.60000000000002},{"x":77.1,"y":149.00000000000003},{"x":78.39999999999999,"y":150.80000000000004},{"x":77.99999999999999,"y":157.50000000000003},{"x":78.49999999999999,"y":160.90000000000003},{"x":79.59999999999998,"y":164.30000000000004},{"x":84.49999999999999,"y":169.50000000000003},{"x":91.79999999999998,"y":172.90000000000003},{"x":116.89999999999998,"y":177.70000000000005},{"x":124,"y":177.70000000000005},{"x":131.2,"y":176.30000000000004},{"x":134.2,"y":175.00000000000003},{"x":138,"y":181.20000000000002},{"x":142.4,"y":185.60000000000002},{"x":147.6,"y":188.90000000000003},{"x":157.2,"y":208.30000000000004},{"x":162.2,"y":228.50000000000003},{"x":165.79999999999998,"y":226.70000000000002},{"x":161,"y":206.8},{"x":153.1,"y":190.8},{"x":158.2,"y":191.3},{"x":165.79999999999998,"y":190},{"x":188.29999999999998,"y":179.3},{"x":190.2,"y":182.5},{"x":193.89999999999998,"y":180.9},{"x":192.49999999999997,"y":178.3},{"x":189.99999999999997,"y":175.4},{"x":184.69999999999996,"y":172},{"x":177.89999999999995,"y":169.1},{"x":176.39999999999995,"y":172.9},{"x":184.89999999999995,"y":176.70000000000002},{"x":164.59999999999994,"y":186.10000000000002},{"x":157.99999999999994,"y":187.20000000000002},{"x":154.49999999999994,"y":186.9},{"x":150.89999999999995,"y":185.8},{"x":148,"y":184},{"x":144.8,"y":181.7},{"x":153.4,"y":178.1},{"x":156.4,"y":177.6},{"x":159.6,"y":177.9},{"x":162.6,"y":179},{"x":165.2,"y":181.1},{"x":168.29999999999998,"y":178.5},{"x":165.1,"y":175.8},{"x":161.2,"y":174.10000000000002},{"x":156.79999999999998,"y":173.50000000000003},{"x":152.29999999999998,"y":174.20000000000002},{"x":141.79999999999998,"y":178.3},{"x":138.29999999999998,"y":172.60000000000002},{"x":145.99999999999997,"y":167.90000000000003},{"x":163.39999999999998,"y":165.30000000000004},{"x":165.09999999999997,"y":168.60000000000005},{"x":168.69999999999996,"y":166.80000000000004},{"x":163.99999999999997,"y":157.70000000000005},{"x":160.39999999999998,"y":159.50000000000006},{"x":161.39999999999998,"y":161.50000000000006},{"x":150.59999999999997,"y":162.70000000000005},{"x":146.29999999999995,"y":156.50000000000006},{"x":143.39999999999995,"y":159.30000000000007},{"x":146.39999999999995,"y":163.60000000000008},{"x":144.59999999999994,"y":164.20000000000007},{"x":130.59999999999994,"y":172.20000000000007},{"x":125.09999999999994,"y":173.30000000000007},{"x":108.59999999999994,"y":172.20000000000007},{"x":109.39999999999993,"y":167.70000000000007},{"x":115.29999999999994,"y":157.30000000000007},{"x":118.79999999999994,"y":153.30000000000007},{"x":121.49999999999994,"y":151.50000000000006},{"x":124.39999999999995,"y":150.40000000000006},{"x":126.09999999999995,"y":153.30000000000007},{"x":127.19999999999995,"y":156.20000000000007},{"x":127.59999999999995,"y":158.80000000000007},{"x":127.19999999999995,"y":161.00000000000006},{"x":126.39999999999995,"y":162.10000000000005},{"x":125.19999999999995,"y":163.00000000000006},{"x":123.59999999999995,"y":163.60000000000005},{"x":121.59999999999995,"y":163.90000000000006},{"x":121.99999999999996,"y":167.90000000000006},{"x":125.59999999999995,"y":167.20000000000007},{"x":128.09999999999997,"y":165.90000000000006},{"x":129.79999999999995,"y":164.30000000000007},{"x":130.79999999999995,"y":162.60000000000008},{"x":131.49999999999994,"y":159.50000000000009},{"x":131.29999999999995,"y":156.20000000000007},{"x":130.29999999999995,"y":153.00000000000009},{"x":128.79999999999995,"y":150.00000000000009},{"x":149.99999999999994,"y":153.3000000000001},{"x":163.29999999999995,"y":150.50000000000009},{"x":162.09999999999997,"y":146.60000000000008},{"x":150,"y":149.2},{"x":144,"y":148.5},{"x":145.1,"y":135},{"x":144.4,"y":129.6},{"x":142.3,"y":125.1},{"x":139.10000000000002,"y":127.6},{"x":140.60000000000002,"y":131.2},{"x":140.00000000000003,"y":147.7},{"x":127.70000000000003,"y":145.89999999999998},{"x":121.70000000000003,"y":146.89999999999998},{"x":116.00000000000003,"y":150.2},{"x":109.00000000000003,"y":159.2},{"x":105.90000000000003,"y":165.29999999999998},{"x":104.50000000000003,"y":171.29999999999998},{"x":98.30000000000003,"y":170.2},{"x":99.40000000000002,"y":168.7},{"x":100.20000000000002,"y":167},{"x":100.70000000000002,"y":165.2},{"x":100.90000000000002,"y":163.29999999999998},{"x":100.20000000000002,"y":158.7},{"x":98.1,"y":154},{"x":94.69999999999999,"y":149.6},{"x":90,"y":146},{"x":87.7,"y":149.3},{"x":91.4,"y":152.4},{"x":94.2,"y":156},{"x":96,"y":159.7},{"x":96.6,"y":163.29999999999998},{"x":96.39999999999999,"y":164.99999999999997},{"x":95.8,"y":166.49999999999997},{"x":94.89999999999999,"y":167.79999999999998},{"x":93.6,"y":169},{"x":87.5,"y":166.3},{"x":85.2,"y":164.5},{"x":83.7,"y":162.5},{"x":82.3,"y":156.7},{"x":82.7,"y":150.89999999999998},{"x":92.2,"y":127.59999999999998},{"x":98.7,"y":120.89999999999998},{"x":113.4,"y":112.59999999999998},{"x":133.3,"y":107.39999999999998},{"x":134.3,"y":111.19999999999997},{"x":133.60000000000002,"y":115.99999999999997},{"x":130.8,"y":121.09999999999997},{"x":125.4,"y":125.99999999999997},{"x":113.60000000000001,"y":132.39999999999998},{"x":112.80000000000001,"y":130.59999999999997},{"x":112.30000000000001,"y":128.69999999999996},{"x":112.30000000000001,"y":126.79999999999995},{"x":112.60000000000001,"y":125.09999999999995},{"x":114.30000000000001,"y":122.79999999999995},{"x":117.30000000000001,"y":120.79999999999995},{"x":120.70000000000002,"y":119.49999999999996},{"x":123.50000000000001,"y":119.19999999999996},{"x":124.20000000000002,"y":115.19999999999996},{"x":119.90000000000002,"y":115.39999999999996},{"x":115.20000000000002,"y":117.19999999999996},{"x":111.10000000000002,"y":120.19999999999996},{"x":108.70000000000002,"y":123.89999999999996},{"x":108.20000000000002,"y":126.49999999999996},{"x":108.20000000000002,"y":129.19999999999996},{"x":108.80000000000001,"y":131.79999999999995},{"x":109.80000000000001,"y":134.09999999999997},{"x":105.4,"y":136.89999999999998},{"x":101.9,"y":140.09999999999997},{"x":98.9,"y":137.99999999999997},{"x":96.30000000000001,"y":136.89999999999998},{"x":95.30000000000001,"y":140.79999999999998},{"x":97.9,"y":142.1},{"x":103.5,"y":147.2},{"x":104.7,"y":149.29999999999998},{"x":108.7,"y":148.7},{"x":108.3,"y":147.29999999999998},{"x":106.3,"y":144.2},{"x":104.89999999999999,"y":142.7},{"x":105.6,"y":141.79999999999998},{"x":124.19999999999999,"y":131.39999999999998},{"x":132.89999999999998,"y":124.49999999999997},{"x":136.7,"y":118.59999999999997},{"x":138.29999999999998,"y":112.19999999999996},{"x":136.89999999999998,"y":105.79999999999995},{"x":150.2,"y":99.09999999999995},{"x":151.29999999999998,"y":104.09999999999995},{"x":166.49999999999997,"y":104.09999999999995},{"x":171.09999999999997,"y":120.29999999999995},{"x":174.79999999999995,"y":118.69999999999996},{"x":171.09999999999997,"y":107.39999999999996},{"x":170.29999999999995,"y":101.09999999999997},{"x":171.49999999999994,"y":91.39999999999996},{"x":174.29999999999995,"y":82.19999999999996},{"x":196.09999999999997,"y":104.29999999999995},{"x":204.39999999999998,"y":122.89999999999995},{"x":207.2,"y":125.49999999999994},{"x":211.2,"y":126.49999999999994},{"x":211.2,"y":122.49999999999994},{"x":209.2,"y":121.99999999999994},{"x":207.6,"y":120.49999999999994},{"x":202.6,"y":107.69999999999995},{"x":227.7,"y":99.19999999999995},{"x":228.7,"y":105.09999999999995},{"x":221.5,"y":107.39999999999995},{"x":222.1,"y":111.39999999999995},{"x":233.4,"y":107.89999999999995},{"x":233.20000000000002,"y":106.29999999999995},{"x":233.2,"y":106.2}]]')
  console.log("loading")

  //scale up
  const scaleFactor = 6
  points = points.map(
    (path) => {
      return path.map(
        (vector) => {
          return {x:vector.x*scaleFactor, y:vector.y*scaleFactor}
        }
      )
    }
  )


  const maze = Bodies.fromVertices(viewport().width/2, viewport().height/2, points, {
    isStatic: true,
    render: {
      fillStyle: "#AA0000",
      strokeStyle: "#AA0000"
    }
  }, true)



  World.add(engine.world, maze)


  // walls
  const wallWidth = 50
  const wallN = Bodies.rectangle(viewport().width / 2, 0, viewport().width, wallWidth, {isStatic: true})
  const wallS = Bodies.rectangle(viewport().width / 2, viewport().height, viewport().width, wallWidth, {isStatic: true})
  const wallW = Bodies.rectangle(0, viewport().height / 2, wallWidth, viewport().height, {isStatic: true})
  const wallE = Bodies.rectangle(viewport().width, viewport().height / 2, wallWidth, viewport().height, {isStatic: true})
  World.add(engine.world, [wallN, wallS, wallW, wallE])


  // ball
  const ball = Bodies.circle(viewport().width / 2 - (300), viewport().height / 2 - (200), 10, 20)
  World.add(engine.world, [ball])


  // run the engine
  const run = () => {
    window.requestAnimationFrame(run)
    const LR = ballVelocity.tiltLR / 3
    const FB = ballVelocity.tiltFB / 3
    Body.setVelocity(ball, {x: LR, y: FB})
    Engine.update(engine, 1000 / 60)
  }

  run() // game engine

// run the renderer
  Render.run(render)

})


/// MAGIC

!function (a) {'object' == typeof exports ? module.exports = a() : 'function' == typeof define && define.amd ? define(a) : 'undefined' != typeof window ? window.decomp = a() : 'undefined' != typeof global ? global.decomp = a() : 'undefined' != typeof self && (self.decomp = a())}(function () {
  return function a (b, c, d) {
    function e (g, h) {
      if (!c[g]) {
        if (!b[g]) {
          var i = 'function' == typeof require && require
          if (!h && i) return i(g, !0)
          if (f) return f(g, !0)
          throw new Error('Cannot find module ' + g)
        }
        var j = c[g] = {exports: {}}
        b[g][0].call(j.exports, function (a) {
          var c = b[g][1][a]
          return e(c ? c : a)
        }, j, j.exports, a, b, c, d)
      }
      return c[g].exports
    }

    for (var f = 'function' == typeof require && require, g = 0; g < d.length; g++) e(d[g])
    return e
  }({
    1: [function (a, b) {
      function c () {}

      var d = a('./Scalar')
      b.exports = c, c.lineInt = function (a, b, c) {
        c = c || 0
        var e, f, g, h, i, j, k, l = [0, 0]
        return e = a[1][1] - a[0][1], f = a[0][0] - a[1][0], g = e * a[0][0] + f * a[0][1], h = b[1][1] - b[0][1], i = b[0][0] - b[1][0], j = h * b[0][0] + i * b[0][1], k = e * i - h * f, d.eq(k, 0, c) || (l[0] = (i * g - f * j) / k, l[1] = (e * j - h * g) / k), l
      }, c.segmentsIntersect = function (a, b, c, d) {
        var e = b[0] - a[0], f = b[1] - a[1], g = d[0] - c[0], h = d[1] - c[1]
        if (0 == g * f - h * e) return !1
        var i = (e * (c[1] - a[1]) + f * (a[0] - c[0])) / (g * f - h * e),
          j = (g * (a[1] - c[1]) + h * (c[0] - a[0])) / (h * e - g * f)
        return i >= 0 && 1 >= i && j >= 0 && 1 >= j
      }
    }, {'./Scalar': 4}],
    2: [function (a, b) {
      function c () {}

      b.exports = c, c.area = function (a, b, c) {return (b[0] - a[0]) * (c[1] - a[1]) - (c[0] - a[0]) * (b[1] - a[1])}, c.left = function (a, b, d) {return c.area(a, b, d) > 0}, c.leftOn = function (a, b, d) {return c.area(a, b, d) >= 0}, c.right = function (a, b, d) {return c.area(a, b, d) < 0}, c.rightOn = function (a, b, d) {return c.area(a, b, d) <= 0}
      var d = [], e = []
      c.collinear = function (a, b, f, g) {
        if (g) {
          var h = d, i = e
          h[0] = b[0] - a[0], h[1] = b[1] - a[1], i[0] = f[0] - b[0], i[1] = f[1] - b[1]
          var j = h[0] * i[0] + h[1] * i[1], k = Math.sqrt(h[0] * h[0] + h[1] * h[1]),
            l = Math.sqrt(i[0] * i[0] + i[1] * i[1]), m = Math.acos(j / (k * l))
          return g > m
        }
        return 0 == c.area(a, b, f)
      }, c.sqdist = function (a, b) {
        var c = b[0] - a[0], d = b[1] - a[1]
        return c * c + d * d
      }
    }, {}],
    3: [function (a, b) {
      function c () {this.vertices = []}

      function d (a, b, c, d, e) {
        e = e || 0
        var f = b[1] - a[1], h = a[0] - b[0], i = f * a[0] + h * a[1], j = d[1] - c[1], k = c[0] - d[0],
          l = j * c[0] + k * c[1], m = f * k - j * h
        return g.eq(m, 0, e) ? [0, 0] : [(k * i - h * l) / m, (f * l - j * i) / m]
      }

      var e = a('./Line'), f = a('./Point'), g = a('./Scalar')
      b.exports = c, c.prototype.at = function (a) {
        var b = this.vertices, c = b.length
        return b[0 > a ? a % c + c : a % c]
      }, c.prototype.first = function () {return this.vertices[0]}, c.prototype.last = function () {return this.vertices[this.vertices.length - 1]}, c.prototype.clear = function () {this.vertices.length = 0}, c.prototype.append = function (a, b, c) {
        if ('undefined' == typeof b) throw new Error('From is not given!')
        if ('undefined' == typeof c) throw new Error('To is not given!')
        if (b > c - 1) throw new Error('lol1')
        if (c > a.vertices.length) throw new Error('lol2')
        if (0 > b) throw new Error('lol3')
        for (var d = b; c > d; d++) this.vertices.push(a.vertices[d])
      }, c.prototype.makeCCW = function () {
        for (var a = 0, b = this.vertices, c = 1; c < this.vertices.length; ++c) (b[c][1] < b[a][1] || b[c][1] == b[a][1] && b[c][0] > b[a][0]) && (a = c)
        f.left(this.at(a - 1), this.at(a), this.at(a + 1)) || this.reverse()
      }, c.prototype.reverse = function () {
        for (var a = [], b = 0, c = this.vertices.length; b !== c; b++) a.push(this.vertices.pop())
        this.vertices = a
      }, c.prototype.isReflex = function (a) {return f.right(this.at(a - 1), this.at(a), this.at(a + 1))}
      var h = [], i = []
      c.prototype.canSee = function (a, b) {
        var c, d, g = h, j = i
        if (f.leftOn(this.at(a + 1), this.at(a), this.at(b)) && f.rightOn(this.at(a - 1), this.at(a), this.at(b))) return !1
        d = f.sqdist(this.at(a), this.at(b))
        for (var k = 0; k !== this.vertices.length; ++k) if ((k + 1) % this.vertices.length !== a && k !== a && f.leftOn(this.at(a), this.at(b), this.at(k + 1)) && f.rightOn(this.at(a), this.at(b), this.at(k)) && (g[0] = this.at(a), g[1] = this.at(b), j[0] = this.at(k), j[1] = this.at(k + 1), c = e.lineInt(g, j), f.sqdist(this.at(a), c) < d)) return !1
        return !0
      }, c.prototype.copy = function (a, b, d) {
        var e = d || new c
        if (e.clear(), b > a) {for (var f = a; b >= f; f++) e.vertices.push(this.vertices[f])} else {
          for (var f = 0; b >= f; f++) e.vertices.push(this.vertices[f])
          for (var f = a; f < this.vertices.length; f++) e.vertices.push(this.vertices[f])
        }
        return e
      }, c.prototype.getCutEdges = function () {
        for (var a = [], b = [], d = [], e = new c, f = Number.MAX_VALUE, g = 0; g < this.vertices.length; ++g) if (this.isReflex(g)) for (var h = 0; h < this.vertices.length; ++h) if (this.canSee(g, h)) {
          b = this.copy(g, h, e).getCutEdges(), d = this.copy(h, g, e).getCutEdges()
          for (var i = 0; i < d.length; i++) b.push(d[i])
          b.length < f && (a = b, f = b.length, a.push([this.at(g), this.at(h)]))
        }
        return a
      }, c.prototype.decomp = function () {
        var a = this.getCutEdges()
        return a.length > 0 ? this.slice(a) : [this]
      }, c.prototype.slice = function (a) {
        if (0 == a.length) return [this]
        if (a instanceof Array && a.length && a[0] instanceof Array && 2 == a[0].length && a[0][0] instanceof Array) {
          for (var b = [this], c = 0; c < a.length; c++) for (var d = a[c], e = 0; e < b.length; e++) {
            var f = b[e], g = f.slice(d)
            if (g) {
              b.splice(e, 1), b.push(g[0], g[1])
              break
            }
          }
          return b
        }
        var d = a, c = this.vertices.indexOf(d[0]), e = this.vertices.indexOf(d[1])
        return -1 != c && -1 != e ? [this.copy(c, e), this.copy(e, c)] : !1
      }, c.prototype.isSimple = function () {
        for (var a = this.vertices, b = 0; b < a.length - 1; b++) for (var c = 0; b - 1 > c; c++) if (e.segmentsIntersect(a[b], a[b + 1], a[c], a[c + 1])) return !1
        for (var b = 1; b < a.length - 2; b++) if (e.segmentsIntersect(a[0], a[a.length - 1], a[b], a[b + 1])) return !1
        return !0
      }, c.prototype.quickDecomp = function (a, b, e, g, h, i) {
        h = h || 100, i = i || 0, g = g || 25, a = 'undefined' != typeof a ? a : [], b = b || [], e = e || []
        var j = [0, 0], k = [0, 0], l = [0, 0], m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = new c, u = new c,
          v = this, w = this.vertices
        if (w.length < 3) return a
        if (i++, i > h) return console.warn('quickDecomp: max level (' + h + ') reached.'), a
        for (var x = 0; x < this.vertices.length; ++x) if (v.isReflex(x)) {
          b.push(v.vertices[x]), m = n = Number.MAX_VALUE
          for (var y = 0; y < this.vertices.length; ++y) f.left(v.at(x - 1), v.at(x), v.at(y)) && f.rightOn(v.at(x - 1), v.at(x), v.at(y - 1)) && (l = d(v.at(x - 1), v.at(x), v.at(y), v.at(y - 1)), f.right(v.at(x + 1), v.at(x), l) && (o = f.sqdist(v.vertices[x], l), n > o && (n = o, k = l, r = y))), f.left(v.at(x + 1), v.at(x), v.at(y + 1)) && f.rightOn(v.at(x + 1), v.at(x), v.at(y)) && (l = d(v.at(x + 1), v.at(x), v.at(y), v.at(y + 1)), f.left(v.at(x - 1), v.at(x), l) && (o = f.sqdist(v.vertices[x], l), m > o && (m = o, j = l, q = y)))
          if (r == (q + 1) % this.vertices.length) { l[0] = (k[0] + j[0]) / 2, l[1] = (k[1] + j[1]) / 2, e.push(l), q > x ? (t.append(v, x, q + 1), t.vertices.push(l), u.vertices.push(l), 0 != r && u.append(v, r, v.vertices.length), u.append(v, 0, x + 1)) : (0 != x && t.append(v, x, v.vertices.length), t.append(v, 0, q + 1), t.vertices.push(l), u.vertices.push(l), u.append(v, r, x + 1)) } else {
            if (r > q && (q += this.vertices.length), p = Number.MAX_VALUE, r > q) return a
            for (var y = r; q >= y; ++y) f.leftOn(v.at(x - 1), v.at(x), v.at(y)) && f.rightOn(v.at(x + 1), v.at(x), v.at(y)) && (o = f.sqdist(v.at(x), v.at(y)), p > o && (p = o, s = y % this.vertices.length))
            s > x ? (t.append(v, x, s + 1), 0 != s && u.append(v, s, w.length), u.append(v, 0, x + 1)) : (0 != x && t.append(v, x, w.length), t.append(v, 0, s + 1), u.append(v, s, x + 1))
          }
          return t.vertices.length < u.vertices.length ? (t.quickDecomp(a, b, e, g, h, i), u.quickDecomp(a, b, e, g, h, i)) : (u.quickDecomp(a, b, e, g, h, i), t.quickDecomp(a, b, e, g, h, i)), a
        }
        return a.push(this), a
      }, c.prototype.removeCollinearPoints = function (a) {
        for (var b = 0, c = this.vertices.length - 1; this.vertices.length > 3 && c >= 0; --c) f.collinear(this.at(c - 1), this.at(c), this.at(c + 1), a) && (this.vertices.splice(c % this.vertices.length, 1), c--, b++)
        return b
      }
    }, {'./Line': 1, './Point': 2, './Scalar': 4}],
    4: [function (a, b) {
      function c () {}

      b.exports = c, c.eq = function (a, b, c) {return c = c || 0, Math.abs(a - b) < c}
    }, {}],
    5: [function (a, b) {b.exports = {Polygon: a('./Polygon'), Point: a('./Point')}}, {'./Point': 2, './Polygon': 3}]
  }, {}, [5])(5)
})

function loadGitHubScript (url) {
  return fetch(url).then(function (res) {
    return res.blob()
  }).then(function (body) {
    return loadScript(URL.createObjectURL(body))
  })
}

function loadScript (url) {
  return new Promise(function (resolve, reject) {
    var script = document.createElement('script')
    script.src = url
    script.onload = resolve
    script.onerror = reject
    document.head.appendChild(script)
  })
}