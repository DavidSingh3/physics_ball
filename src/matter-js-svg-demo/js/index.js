
viewport = () => {
  let e = window
  let a = 'inner'
  if (!('innerWidth' in window)) {
    a = 'client'
    e = document.documentElement || document.body
  }
  return {width: e[a + 'Width'], height: e[a + 'Height']}
}


const url = 'https://raw.githubusercontent.com/progers/pathseg/master/pathseg.js'
loadGitHubScript(url).then(function () {
// module aliases
  var Engine = Matter.Engine,
    Render = Matter.Render,
    World = Matter.World,
    Bodies = Matter.Bodies,
    Composites = Matter.Composites,
    Common = Matter.Common,
    Svg = Matter.Svg,
    Vertices = Matter.Vertices

// create an engine
  const engine = Engine.create()

// create a renderer
  const render = Render.create({
    element: document.body,
    engine: engine,
    options: {
      width: viewport().width,
      height: viewport().height,
      wireframes: false
    }
  })

  let points = JSON.parse('[[{"x":214.3,"y":50,"moveTo":true},{"x":214.70000000000002,"y":48.6},{"x":214.70000000000002,"y":47.1},{"x":213.4,"y":41.4},{"x":210.6,"y":36.699999999999996},{"x":198.79999999999998,"y":25.899999999999995},{"x":161.1,"y":2.3},{"x":155.2,"y":0.4999999999999998},{"x":149.5,"y":0},{"x":143.8,"y":0.7},{"x":138.20000000000002,"y":2.5999999999999996},{"x":92.6,"y":3.9},{"x":61.8,"y":11.5},{"x":35.2,"y":25},{"x":37.400000000000006,"y":28.3},{"x":63.300000000000004,"y":15.3},{"x":96.1,"y":7.6000000000000005},{"x":96.5,"y":13},{"x":95.6,"y":17.4},{"x":77.7,"y":45.5},{"x":77.10000000000001,"y":45.5},{"x":65.80000000000001,"y":46.1},{"x":68.10000000000001,"y":40.5},{"x":71.4,"y":35.4},{"x":68.2,"y":32.8},{"x":64.2,"y":39.4},{"x":59.800000000000004,"y":54.099999999999994},{"x":58.6,"y":64.19999999999999},{"x":59.3,"y":84},{"x":57.699999999999996,"y":94.5},{"x":54.4,"y":103.5},{"x":57.8,"y":105.5},{"x":59.599999999999994,"y":101.4},{"x":62.599999999999994,"y":90.2},{"x":63.3,"y":75},{"x":62.4,"y":66.8},{"x":67.1,"y":68.5},{"x":68.8,"y":69.9},{"x":69.5,"y":71.80000000000001},{"x":70.8,"y":86.9},{"x":74.6,"y":85.80000000000001},{"x":73.89999999999999,"y":80.80000000000001},{"x":73.89999999999999,"y":80.80000000000001},{"x":78.69999999999999,"y":79.00000000000001},{"x":77.29999999999998,"y":75.30000000000001},{"x":73.59999999999998,"y":76.60000000000001},{"x":73.59999999999998,"y":71.60000000000001},{"x":72.09999999999998,"y":67.80000000000001},{"x":69.4,"y":65},{"x":66,"y":63.4},{"x":62.6,"y":62.5},{"x":64.7,"y":50.1},{"x":76.7,"y":49.300000000000004},{"x":77.2,"y":60.2},{"x":81.10000000000001,"y":60},{"x":80.4,"y":51.2},{"x":80.7,"y":48.800000000000004},{"x":81.5,"y":46.50000000000001},{"x":96.4,"y":25.400000000000006},{"x":97.4,"y":25.400000000000006},{"x":100.60000000000001,"y":26.800000000000004},{"x":103.4,"y":29.400000000000006},{"x":113.4,"y":14.900000000000006},{"x":109.9,"y":12.900000000000006},{"x":102.80000000000001,"y":23.500000000000007},{"x":98.4,"y":21.60000000000001},{"x":100.80000000000001,"y":13.000000000000009},{"x":100.4,"y":6.900000000000009},{"x":130.9,"y":7.100000000000009},{"x":126.80000000000001,"y":10.90000000000001},{"x":126.10000000000001,"y":10.600000000000009},{"x":124.00000000000001,"y":10.600000000000009},{"x":122.10000000000001,"y":11.500000000000009},{"x":120.60000000000001,"y":12.80000000000001},{"x":116.10000000000001,"y":20.20000000000001},{"x":112,"y":31},{"x":115.7,"y":32.3},{"x":121.2,"y":18.699999999999996},{"x":123.8,"y":15.299999999999995},{"x":124.6,"y":14.799999999999995},{"x":124.8,"y":14.799999999999995},{"x":125.1,"y":15.099999999999996},{"x":126.1,"y":16.899999999999995},{"x":127.1,"y":20.199999999999996},{"x":127.5,"y":23.799999999999997},{"x":131.4,"y":23.499999999999996},{"x":131,"y":19.299999999999997},{"x":129.7,"y":15.299999999999997},{"x":129.1,"y":14.099999999999998},{"x":134,"y":9.699999999999998},{"x":139.1,"y":6.499999999999997},{"x":139.29999999999998,"y":6.499999999999997},{"x":136.89999999999998,"y":12.199999999999998},{"x":136.7,"y":41},{"x":133.29999999999998,"y":39.2},{"x":129.89999999999998,"y":38.2},{"x":131.29999999999998,"y":34},{"x":131.49999999999997,"y":31.8},{"x":131.49999999999997,"y":30},{"x":127.59999999999997,"y":30.7},{"x":127.59999999999997,"y":32.3},{"x":126.49999999999997,"y":36.099999999999994},{"x":119.99999999999997,"y":45.39999999999999},{"x":119.39999999999998,"y":47.099999999999994},{"x":123.19999999999997,"y":48.199999999999996},{"x":123.59999999999998,"y":47.099999999999994},{"x":127.69999999999997,"y":41.89999999999999},{"x":132.09999999999997,"y":43.19999999999999},{"x":134.49999999999997,"y":44.39999999999999},{"x":136.49999999999997,"y":45.99999999999999},{"x":135.59999999999997,"y":50.199999999999996},{"x":133.89999999999998,"y":54.099999999999994},{"x":137.29999999999998,"y":56.099999999999994},{"x":139.6,"y":50.3},{"x":140.4,"y":16.299999999999997},{"x":142.4,"y":9.799999999999997},{"x":146.4,"y":4.299999999999997},{"x":153,"y":4.299999999999997},{"x":159.7,"y":6.099999999999997},{"x":201.29999999999998,"y":33.3},{"x":193.29999999999998,"y":37.8},{"x":189.79999999999998,"y":31.199999999999996},{"x":184.39999999999998,"y":24.599999999999994},{"x":181.49999999999997,"y":27.299999999999994},{"x":187.09999999999997,"y":34.49999999999999},{"x":190.39999999999998,"y":41.39999999999999},{"x":191.2,"y":48.29999999999999},{"x":189.7,"y":55.29999999999999},{"x":193.39999999999998,"y":56.69999999999999},{"x":195.09999999999997,"y":49.19999999999999},{"x":194.49999999999997,"y":41.69999999999999},{"x":204.59999999999997,"y":35.999999999999986},{"x":208.89999999999998,"y":41.09999999999999},{"x":210.29999999999998,"y":44.09999999999999},{"x":210.99999999999997,"y":47.499999999999986},{"x":210.69999999999996,"y":48.899999999999984},{"x":209.89999999999995,"y":50.29999999999998},{"x":208.69999999999996,"y":51.79999999999998},{"x":192.59999999999997,"y":62.29999999999998},{"x":184.09999999999997,"y":65.79999999999998},{"x":173.89999999999998,"y":47.79999999999998},{"x":183.49999999999997,"y":46.29999999999998},{"x":183.29999999999998,"y":42.399999999999984},{"x":170,"y":44.3},{"x":169.8,"y":45.699999999999996},{"x":169.8,"y":48.199999999999996},{"x":176.3,"y":61.699999999999996},{"x":182.4,"y":70.19999999999999},{"x":193.70000000000002,"y":66.1},{"x":209.3,"y":56.3},{"x":212,"y":53.9},{"x":225.4,"y":86.9},{"x":225.20000000000002,"y":102.5},{"x":217.3,"y":116.2},{"x":213,"y":119.60000000000001},{"x":208.5,"y":122.10000000000001},{"x":203.6,"y":123.50000000000001},{"x":198.5,"y":123.90000000000002},{"x":183.2,"y":121.20000000000002},{"x":179.79999999999998,"y":121.50000000000001},{"x":177.7,"y":123.00000000000001},{"x":176.29999999999998,"y":125.60000000000001},{"x":175.89999999999998,"y":128.10000000000002},{"x":176.29999999999998,"y":130.50000000000003},{"x":177.39999999999998,"y":133.20000000000002},{"x":171.39999999999998,"y":137.70000000000002},{"x":160.99999999999997,"y":126.70000000000002},{"x":163.09999999999997,"y":120.90000000000002},{"x":163.69999999999996,"y":114.80000000000003},{"x":173.49999999999997,"y":112.50000000000003},{"x":196.59999999999997,"y":111.90000000000003},{"x":204.19999999999996,"y":110.00000000000003},{"x":210.49999999999997,"y":106.60000000000002},{"x":212.49999999999997,"y":104.70000000000002},{"x":213.89999999999998,"y":102.60000000000002},{"x":214.89999999999998,"y":100.20000000000002},{"x":215.39999999999998,"y":97.50000000000001},{"x":214.79999999999998,"y":93.00000000000001},{"x":217.39999999999998,"y":91.10000000000001},{"x":214.7,"y":88.00000000000001},{"x":212.79999999999998,"y":89.40000000000002},{"x":204.1,"y":92.30000000000003},{"x":205.29999999999998,"y":96.00000000000003},{"x":210.99999999999997,"y":94.50000000000003},{"x":211.29999999999998,"y":97.40000000000003},{"x":210.99999999999997,"y":99.20000000000003},{"x":210.29999999999998,"y":100.70000000000003},{"x":209.29999999999998,"y":102.20000000000003},{"x":207.99999999999997,"y":103.50000000000003},{"x":202.39999999999998,"y":106.50000000000003},{"x":188.79999999999998,"y":108.50000000000003},{"x":177.89999999999998,"y":108.00000000000003},{"x":163.2,"y":110.90000000000003},{"x":161.89999999999998,"y":107.40000000000003},{"x":166.29999999999998,"y":103.60000000000004},{"x":169.2,"y":98.20000000000003},{"x":170.1,"y":91.60000000000004},{"x":169.2,"y":84.90000000000003},{"x":166.29999999999998,"y":79.30000000000004},{"x":163.1,"y":81.80000000000004},{"x":165.29999999999998,"y":86.20000000000005},{"x":166.1,"y":91.50000000000004},{"x":165.4,"y":96.80000000000004},{"x":163.20000000000002,"y":101.00000000000004},{"x":160.8,"y":103.30000000000004},{"x":158.10000000000002,"y":104.90000000000003},{"x":154.90000000000003,"y":106.10000000000004},{"x":151.00000000000003,"y":106.70000000000003},{"x":147.60000000000002,"y":101.30000000000003},{"x":143.40000000000003,"y":97.50000000000003},{"x":126.60000000000004,"y":88.90000000000003},{"x":124.60000000000004,"y":92.40000000000003},{"x":132.70000000000005,"y":96.20000000000003},{"x":131.60000000000005,"y":99.80000000000003},{"x":131.80000000000004,"y":117.60000000000002},{"x":135.70000000000005,"y":117.60000000000002},{"x":135.40000000000003,"y":100.80000000000003},{"x":136.30000000000004,"y":97.70000000000003},{"x":142.30000000000004,"y":101.50000000000003},{"x":144.80000000000004,"y":104.10000000000002},{"x":147.00000000000003,"y":107.50000000000003},{"x":145.00000000000003,"y":108.40000000000003},{"x":143.30000000000004,"y":109.70000000000003},{"x":142.00000000000003,"y":111.60000000000004},{"x":141.60000000000002,"y":114.10000000000004},{"x":145.50000000000003,"y":114.10000000000004},{"x":145.90000000000003,"y":112.80000000000004},{"x":147.00000000000003,"y":111.80000000000004},{"x":148.90000000000003,"y":111.00000000000004},{"x":158.10000000000002,"y":109.10000000000004},{"x":159.50000000000003,"y":115.10000000000004},{"x":158.70000000000002,"y":121.30000000000004},{"x":156.00000000000003,"y":127.10000000000004},{"x":152.10000000000002,"y":131.80000000000004},{"x":154.8,"y":134.80000000000004},{"x":158.8,"y":130.20000000000005},{"x":175.10000000000002,"y":147.50000000000006},{"x":178.50000000000003,"y":145.30000000000007},{"x":174.10000000000002,"y":140.50000000000006},{"x":180.00000000000003,"y":136.20000000000005},{"x":194.70000000000002,"y":143.30000000000004},{"x":193.00000000000003,"y":148.40000000000003},{"x":196.70000000000002,"y":150.00000000000003},{"x":199.10000000000002,"y":140.90000000000003},{"x":199.10000000000002,"y":136.50000000000003},{"x":198.40000000000003,"y":132.40000000000003},{"x":194.60000000000002,"y":133.50000000000003},{"x":195.20000000000002,"y":139.30000000000004},{"x":186.20000000000002,"y":135.70000000000005},{"x":182.70000000000002,"y":133.40000000000003},{"x":180.70000000000002,"y":131.20000000000005},{"x":180.00000000000003,"y":129.60000000000005},{"x":179.80000000000004,"y":128.20000000000005},{"x":179.80000000000004,"y":126.90000000000005},{"x":180.60000000000005,"y":125.50000000000004},{"x":182.50000000000006,"y":125.30000000000004},{"x":199.70000000000005,"y":128.00000000000003},{"x":205.00000000000006,"y":127.30000000000003},{"x":207.90000000000006,"y":136.40000000000003},{"x":205.70000000000007,"y":144.80000000000004},{"x":200.70000000000007,"y":151.90000000000003},{"x":190.90000000000006,"y":160.60000000000002},{"x":183.90000000000006,"y":164.8},{"x":176.40000000000006,"y":167.8},{"x":168.20000000000007,"y":168.9},{"x":159.10000000000008,"y":168.5},{"x":157.10000000000008,"y":168.9},{"x":155.30000000000007,"y":169.9},{"x":154.20000000000007,"y":171},{"x":153.40000000000006,"y":172.5},{"x":152.40000000000006,"y":176.9},{"x":152.40000000000006,"y":180.6},{"x":160.20000000000007,"y":199.2},{"x":163.60000000000008,"y":197.29999999999998},{"x":157.10000000000008,"y":183.1},{"x":156.4000000000001,"y":180.2},{"x":156.4000000000001,"y":177.2},{"x":157.00000000000009,"y":174.2},{"x":157.4000000000001,"y":173.29999999999998},{"x":157.8000000000001,"y":172.7},{"x":158.7000000000001,"y":172.39999999999998},{"x":168.3000000000001,"y":172.59999999999997},{"x":177.50000000000009,"y":171.39999999999998},{"x":185.70000000000007,"y":168.09999999999997},{"x":193.20000000000007,"y":163.69999999999996},{"x":206.00000000000009,"y":151.59999999999997},{"x":210.70000000000007,"y":142.89999999999998},{"x":211.80000000000007,"y":134.2},{"x":209.00000000000006,"y":125.89999999999999},{"x":214.60000000000005,"y":123.1},{"x":219.70000000000005,"y":119},{"x":229.00000000000006,"y":102},{"x":228.30000000000007,"y":83.2},{"x":214.3,"y":50},{"x":64.7,"y":49.9,"moveTo":true},{"x":65,"y":48.6},{"x":65,"y":49.9},{"x":64.7,"y":49.9},{"x":76.6,"y":49.4,"moveTo":true},{"x":76.6,"y":49.4},{"x":76.69999999999999,"y":49},{"x":76.6,"y":49.4},{"x":76.6,"y":49.4},{"x":193.4,"y":38.2,"moveTo":true},{"x":193.20000000000002,"y":37.800000000000004},{"x":193.4,"y":37.800000000000004},{"x":193.4,"y":38.2},{"x":203.6,"y":35.2,"moveTo":true},{"x":203.6,"y":35.2},{"x":204,"y":35.400000000000006},{"x":203.6,"y":35.2},{"x":203.6,"y":35.2}],[{"x":84.4,"y":20,"moveTo":true},{"x":81,"y":30.7},{"x":77.4,"y":29.099999999999998},{"x":78.9,"y":24},{"x":75.5,"y":23.8},{"x":64.8,"y":25.6},{"x":49.199999999999996,"y":30.900000000000002},{"x":43.199999999999996,"y":35.6},{"x":40.8,"y":32.300000000000004},{"x":46.099999999999994,"y":28.100000000000005},{"x":50.89999999999999,"y":25.500000000000004},{"x":75.89999999999999,"y":19.700000000000003},{"x":79.8,"y":20.1},{"x":81,"y":17.700000000000003},{"x":84.4,"y":20}],[{"x":212.6,"y":81.3,"moveTo":true},{"x":210.5,"y":69.1},{"x":180.8,"y":79.19999999999999},{"x":159.20000000000002,"y":57.29999999999999},{"x":156.70000000000002,"y":52.99999999999999},{"x":162.10000000000002,"y":39.19999999999999},{"x":167.60000000000002,"y":30.29999999999999},{"x":173.8,"y":34.69999999999999},{"x":177,"y":32.19999999999999},{"x":155.7,"y":18.99999999999999},{"x":156.89999999999998,"y":16.69999999999999},{"x":157.59999999999997,"y":15.799999999999988},{"x":158.39999999999998,"y":15.199999999999989},{"x":156.49999999999997,"y":11.799999999999988},{"x":153.79999999999998,"y":14.199999999999989},{"x":151.89999999999998,"y":17.599999999999987},{"x":147.09999999999997,"y":38.09999999999999},{"x":150.79999999999995,"y":39.399999999999984},{"x":154.39999999999995,"y":22.699999999999985},{"x":164.09999999999994,"y":28.099999999999987},{"x":158.49999999999994,"y":37.29999999999998},{"x":147.29999999999995,"y":68.99999999999999},{"x":146.69999999999996,"y":74.79999999999998},{"x":135.69999999999996,"y":75.09999999999998},{"x":133.49999999999997,"y":68.69999999999997},{"x":130.79999999999998,"y":64.89999999999998},{"x":121.59999999999998,"y":57.39999999999998},{"x":117.29999999999998,"y":55.49999999999998},{"x":116.29999999999998,"y":59.69999999999998},{"x":119.79999999999998,"y":61.399999999999984},{"x":127.29999999999998,"y":67.59999999999998},{"x":129.39999999999998,"y":70.49999999999999},{"x":129.39999999999998,"y":70.49999999999999},{"x":112.59999999999998,"y":78.59999999999998},{"x":102.09999999999998,"y":81.39999999999998},{"x":98.49999999999999,"y":76.49999999999997},{"x":95.29999999999998,"y":70.59999999999997},{"x":93.09999999999998,"y":64.09999999999997},{"x":92.49999999999999,"y":57.499999999999964},{"x":96.99999999999999,"y":57.499999999999964},{"x":103.79999999999998,"y":73.39999999999996},{"x":118.09999999999998,"y":67.89999999999996},{"x":116.19999999999997,"y":64.39999999999996},{"x":105.99999999999997,"y":68.49999999999996},{"x":100.99999999999997,"y":56.99999999999996},{"x":103.19999999999997,"y":56.399999999999956},{"x":105.29999999999997,"y":55.299999999999955},{"x":107.99999999999997,"y":53.09999999999995},{"x":109.99999999999997,"y":50.09999999999995},{"x":111.39999999999998,"y":46.49999999999995},{"x":112.09999999999998,"y":42.09999999999995},{"x":108.09999999999998,"y":41.799999999999955},{"x":107.59999999999998,"y":45.19999999999995},{"x":106.59999999999998,"y":48.09999999999995},{"x":105.19999999999997,"y":50.299999999999955},{"x":103.29999999999997,"y":51.99999999999996},{"x":100.99999999999997,"y":52.99999999999996},{"x":96,"y":53.5},{"x":93.3,"y":53.5},{"x":94.2,"y":50.5},{"x":95.7,"y":47.7},{"x":97.7,"y":45.300000000000004},{"x":100.2,"y":43.2},{"x":97.9,"y":39.900000000000006},{"x":94.5,"y":43.00000000000001},{"x":91.8,"y":46.50000000000001},{"x":89.89999999999999,"y":50.60000000000001},{"x":88.89999999999999,"y":55.10000000000001},{"x":89.19999999999999,"y":62.80000000000001},{"x":91.19999999999999,"y":70.00000000000001},{"x":85.69999999999999,"y":72.50000000000001},{"x":86.79999999999998,"y":76.30000000000001},{"x":92.69999999999999,"y":73.60000000000001},{"x":98.1,"y":82.2},{"x":93.2,"y":84},{"x":77.3,"y":93},{"x":70.39999999999999,"y":100.3},{"x":61.49999999999999,"y":120.3},{"x":59.39999999999999,"y":118.6},{"x":56.89999999999999,"y":117.5},{"x":54.29999999999999,"y":117},{"x":51.59999999999999,"y":117},{"x":35.59999999999999,"y":121.6},{"x":30.799999999999986,"y":121.8},{"x":26.299999999999986,"y":121.1},{"x":22.099999999999987,"y":119.39999999999999},{"x":18.399999999999988,"y":116.8},{"x":25.599999999999987,"y":108.8},{"x":29.599999999999987,"y":111.39999999999999},{"x":34.19999999999999,"y":112.89999999999999},{"x":39.39999999999999,"y":113.19999999999999},{"x":45.19999999999999,"y":112.29999999999998},{"x":44.19999999999999,"y":108.49999999999999},{"x":38.999999999999986,"y":109.29999999999998},{"x":34.399999999999984,"y":108.89999999999998},{"x":30.399999999999984,"y":107.39999999999998},{"x":26.999999999999986,"y":104.69999999999997},{"x":23.999999999999986,"y":100.89999999999998},{"x":21.899999999999984,"y":96.59999999999998},{"x":21.199999999999985,"y":92.39999999999998},{"x":22.099999999999984,"y":88.79999999999998},{"x":24.699999999999985,"y":90.29999999999998},{"x":30.599999999999987,"y":97.19999999999999},{"x":35.399999999999984,"y":100.89999999999999},{"x":40.59999999999999,"y":102.49999999999999},{"x":42.79999999999999,"y":102.19999999999999},{"x":44.99999999999999,"y":101.39999999999999},{"x":46.99999999999999,"y":100.3},{"x":48.49999999999999,"y":99},{"x":45.29999999999999,"y":96.5},{"x":44.59999999999999,"y":97.1},{"x":41.899999999999984,"y":98.19999999999999},{"x":40.29999999999998,"y":98.39999999999999},{"x":37.29999999999998,"y":97.39999999999999},{"x":30.799999999999983,"y":91.6},{"x":28.19999999999998,"y":88.3},{"x":25.69999999999998,"y":86.2},{"x":18.7,"y":83},{"x":16,"y":82.3},{"x":15.6,"y":86.3},{"x":18.7,"y":87.1},{"x":17.4,"y":91.6},{"x":18,"y":96.5},{"x":20,"y":101.4},{"x":23,"y":105.9},{"x":15.8,"y":113.9},{"x":8.4,"y":100.4},{"x":5.3,"y":88.1},{"x":5.3,"y":76.5},{"x":8.7,"y":60.6},{"x":13,"y":51.1},{"x":16.2,"y":46.7},{"x":22.5,"y":51.400000000000006},{"x":17.9,"y":59.50000000000001},{"x":17.299999999999997,"y":61.900000000000006},{"x":17.699999999999996,"y":64.2},{"x":25.199999999999996,"y":77.3},{"x":28.699999999999996,"y":75.39999999999999},{"x":21.799999999999997,"y":63.89999999999999},{"x":21.3,"y":62},{"x":25.4,"y":54.3},{"x":32.9,"y":64.5},{"x":38.9,"y":89.2},{"x":42.9,"y":88.7},{"x":41.3,"y":79},{"x":48.8,"y":78.5},{"x":48.599999999999994,"y":86.8},{"x":52.599999999999994,"y":86.8},{"x":52.599999999999994,"y":69.8},{"x":50.699999999999996,"y":58.8},{"x":46.99999999999999,"y":60.199999999999996},{"x":48.49999999999999,"y":66.89999999999999},{"x":48.89999999999999,"y":74.6},{"x":40.49999999999999,"y":75.19999999999999},{"x":36.29999999999999,"y":62.59999999999999},{"x":33.39999999999999,"y":58.19999999999999},{"x":37.79999999999999,"y":53.09999999999999},{"x":39.59999999999999,"y":53.79999999999999},{"x":41.59999999999999,"y":54.29999999999999},{"x":43.69999999999999,"y":54.29999999999999},{"x":45.89999999999999,"y":53.99999999999999},{"x":50.099999999999994,"y":51.599999999999994},{"x":52.99999999999999,"y":47.89999999999999},{"x":55.79999999999999,"y":38.99999999999999},{"x":51.89999999999999,"y":38.29999999999999},{"x":50.79999999999999,"y":43.09999999999999},{"x":49.19999999999999,"y":46.499999999999986},{"x":47.29999999999999,"y":48.899999999999984},{"x":44.89999999999999,"y":50.19999999999998},{"x":42.19999999999999,"y":50.19999999999998},{"x":39,"y":49},{"x":35.4,"y":45.3},{"x":31.2,"y":38.3},{"x":27.5,"y":40},{"x":30.4,"y":45},{"x":34.699999999999996,"y":50.5},{"x":31,"y":54.8},{"x":25.3,"y":48.599999999999994},{"x":19,"y":43.8},{"x":30.9,"y":33},{"x":28,"y":30.2},{"x":12.6,"y":44.7},{"x":7.1,"y":53.800000000000004},{"x":3,"y":65.4},{"x":1.1,"y":79},{"x":2,"y":92.1},{"x":5.5,"y":104.3},{"x":11.9,"y":115.39999999999999},{"x":16.7,"y":120.39999999999999},{"x":22.7,"y":123.8},{"x":29.299999999999997,"y":125.6},{"x":36.3,"y":125.6},{"x":52.4,"y":121},{"x":55.1,"y":121},{"x":57.300000000000004,"y":121.9},{"x":59.1,"y":123.4},{"x":60.4,"y":125.2},{"x":60,"y":131.7},{"x":60.5,"y":135.1},{"x":61.7,"y":138.5},{"x":66.5,"y":143.6},{"x":73.7,"y":147},{"x":98.4,"y":151.7},{"x":105.5,"y":151.7},{"x":112.6,"y":150.2},{"x":115.6,"y":148.89999999999998},{"x":119.3,"y":154.99999999999997},{"x":123.6,"y":159.29999999999998},{"x":128.79999999999998,"y":162.7},{"x":138.29999999999998,"y":181.79999999999998},{"x":143.1,"y":201.6},{"x":146.6,"y":199.79999999999998},{"x":141.9,"y":180.29999999999998},{"x":134.1,"y":164.49999999999997},{"x":139.1,"y":165.09999999999997},{"x":146.6,"y":163.79999999999995},{"x":168.79999999999998,"y":153.29999999999995},{"x":170.7,"y":156.49999999999994},{"x":174.29999999999998,"y":154.89999999999995},{"x":172.89999999999998,"y":152.29999999999995},{"x":170.39999999999998,"y":149.29999999999995},{"x":165.2,"y":145.99999999999994},{"x":158.5,"y":143.09999999999994},{"x":157,"y":146.79999999999993},{"x":165.5,"y":150.49999999999991},{"x":145.5,"y":159.5999999999999},{"x":139,"y":161},{"x":135.6,"y":160.7},{"x":132.2,"y":159.7},{"x":128.79999999999998,"y":157.89999999999998},{"x":125.49999999999999,"y":155.59999999999997},{"x":134,"y":152.09999999999997},{"x":137,"y":151.59999999999997},{"x":140.1,"y":151.89999999999998},{"x":143.2,"y":152.99999999999997},{"x":145.7,"y":155.19999999999996},{"x":148.79999999999998,"y":152.59999999999997},{"x":145.7,"y":149.79999999999995},{"x":141.79999999999998,"y":148.09999999999997},{"x":137.6,"y":147.59999999999997},{"x":133.1,"y":148.19999999999996},{"x":122.8,"y":152.29999999999995},{"x":119.39999999999999,"y":146.59999999999997},{"x":126.99999999999999,"y":141.99999999999997},{"x":144.1,"y":139.39999999999998},{"x":145.79999999999998,"y":142.7},{"x":149.29999999999998,"y":140.89999999999998},{"x":144.6,"y":131.89999999999998},{"x":141.1,"y":133.7},{"x":142.2,"y":135.7},{"x":131.6,"y":136.89999999999998},{"x":127.39999999999999,"y":130.79999999999998},{"x":124.49999999999999,"y":133.6},{"x":127.39999999999999,"y":137.79999999999998},{"x":125.6,"y":138.39999999999998},{"x":111.8,"y":146.29999999999998},{"x":106.39999999999999,"y":147.49999999999997},{"x":90,"y":146.39999999999998},{"x":90.9,"y":141.99999999999997},{"x":96.60000000000001,"y":131.79999999999998},{"x":100.10000000000001,"y":127.89999999999998},{"x":102.80000000000001,"y":126.09999999999998},{"x":105.60000000000001,"y":124.99999999999999},{"x":107.4,"y":127.89999999999999},{"x":108.5,"y":130.7},{"x":108.8,"y":133.39999999999998},{"x":108.39999999999999,"y":135.49999999999997},{"x":107.6,"y":136.69999999999996},{"x":106.5,"y":137.59999999999997},{"x":104.9,"y":138.19999999999996},{"x":102.9,"y":138.49999999999997},{"x":103.30000000000001,"y":142.39999999999998},{"x":106.80000000000001,"y":141.7},{"x":109.30000000000001,"y":140.39999999999998},{"x":111.00000000000001,"y":138.79999999999998},{"x":112.00000000000001,"y":137.1},{"x":112.70000000000002,"y":134},{"x":112.50000000000001,"y":130.7},{"x":111.60000000000001,"y":127.49999999999999},{"x":110.10000000000001,"y":124.49999999999999},{"x":131,"y":127.79999999999998},{"x":144.1,"y":124.99999999999999},{"x":142.9,"y":121.29999999999998},{"x":131,"y":123.89999999999998},{"x":125.1,"y":123.19999999999997},{"x":126.19999999999999,"y":109.79999999999997},{"x":125.49999999999999,"y":104.59999999999997},{"x":123.39999999999999,"y":100.19999999999996},{"x":120.19999999999999,"y":102.59999999999997},{"x":121.69999999999999,"y":106.09999999999997},{"x":121.1,"y":122.39999999999996},{"x":109,"y":120.59999999999997},{"x":103,"y":121.69999999999996},{"x":97.4,"y":124.99999999999996},{"x":90.5,"y":133.89999999999995},{"x":87.4,"y":139.89999999999995},{"x":86,"y":145.69999999999996},{"x":79.9,"y":144.59999999999997},{"x":81,"y":143.09999999999997},{"x":81.8,"y":141.49999999999997},{"x":82.3,"y":139.69999999999996},{"x":82.5,"y":137.79999999999995},{"x":81.9,"y":133.29999999999995},{"x":79.7,"y":128.69999999999996},{"x":76.3,"y":124.39999999999996},{"x":72,"y":120.69999999999996},{"x":69.7,"y":124.09999999999997},{"x":73.3,"y":127.19999999999996},{"x":76.1,"y":130.59999999999997},{"x":77.89999999999999,"y":134.29999999999995},{"x":78.49999999999999,"y":137.79999999999995},{"x":78.19999999999999,"y":139.39999999999995},{"x":77.6,"y":140.89999999999995},{"x":76.69999999999999,"y":142.29999999999995},{"x":75.39999999999999,"y":143.39999999999995},{"x":69.39999999999999,"y":140.69999999999996},{"x":67.1,"y":138.99999999999997},{"x":65.6,"y":136.89999999999998},{"x":64.19999999999999,"y":131.29999999999998},{"x":64.69999999999999,"y":125.59999999999998},{"x":74.1,"y":102.59999999999998},{"x":80.5,"y":95.99999999999999},{"x":95,"y":87.79999999999998},{"x":114.6,"y":82.69999999999999},{"x":115.6,"y":86.29999999999998},{"x":114.89999999999999,"y":90.99999999999999},{"x":112.1,"y":95.99999999999999},{"x":106.89999999999999,"y":100.89999999999999},{"x":95.19999999999999,"y":107.19999999999999},{"x":94.39999999999999,"y":105.39999999999999},{"x":93.89999999999999,"y":103.49999999999999},{"x":93.89999999999999,"y":101.49999999999999},{"x":94.19999999999999,"y":99.79999999999998},{"x":95.79999999999998,"y":97.59999999999998},{"x":98.79999999999998,"y":95.49999999999999},{"x":102.19999999999999,"y":94.19999999999999},{"x":104.99999999999999,"y":93.89999999999999},{"x":105.79999999999998,"y":90.1},{"x":101.59999999999998,"y":90.3},{"x":96.99999999999999,"y":92.1},{"x":92.99999999999999,"y":95.1},{"x":90,"y":98.7},{"x":89.5,"y":101.3},{"x":89.7,"y":104.1},{"x":90.3,"y":106.69999999999999},{"x":91.39999999999999,"y":108.99999999999999},{"x":86.99999999999999,"y":111.79999999999998},{"x":83.59999999999998,"y":114.99999999999999},{"x":80.59999999999998,"y":112.89999999999999},{"x":77.89999999999998,"y":111.8},{"x":76.89999999999998,"y":115.6},{"x":79.49999999999997,"y":116.89999999999999},{"x":85.09999999999997,"y":121.89999999999999},{"x":86.29999999999997,"y":124.1},{"x":90.19999999999997,"y":123.5},{"x":89.69999999999997,"y":122.1},{"x":87.69999999999997,"y":119},{"x":86.29999999999997,"y":117.5},{"x":87.09999999999997,"y":116.6},{"x":105.29999999999997,"y":106.39999999999999},{"x":113.99999999999997,"y":99.6},{"x":117.69999999999997,"y":93.8},{"x":119.29999999999997,"y":87.5},{"x":117.89999999999996,"y":81.2},{"x":130.99999999999997,"y":74.5},{"x":132.09999999999997,"y":79.5},{"x":147.09999999999997,"y":79.5},{"x":151.59999999999997,"y":95.6},{"x":155.29999999999995,"y":94},{"x":151.59999999999997,"y":82.9},{"x":150.79999999999995,"y":76.7},{"x":152.09999999999997,"y":67.10000000000001},{"x":154.89999999999998,"y":58.00000000000001},{"x":176.39999999999998,"y":79.80000000000001},{"x":184.59999999999997,"y":98.00000000000001},{"x":187.39999999999998,"y":100.60000000000001},{"x":191.29999999999998,"y":101.60000000000001},{"x":191.29999999999998,"y":97.60000000000001},{"x":189.29999999999998,"y":97.2},{"x":187.7,"y":95.60000000000001},{"x":182.79999999999998,"y":83.00000000000001},{"x":207.39999999999998,"y":74.60000000000001},{"x":208.39999999999998,"y":80.4},{"x":201.29999999999998,"y":82.7},{"x":201.89999999999998,"y":86.60000000000001},{"x":212.89999999999998,"y":83.2},{"x":212.6,"y":81.3},{"x":212.6,"y":81.3}]]')
  console.log("loading")

  //scale up
  const scaleFactor = 2
  points = points.map(
    (path) => {
      return path.map(
        (vector) => {
          return {x:vector.x*scaleFactor, y:vector.y*scaleFactor}
        }
      )
    }
  )
  console.log(points)

  const v = Bodies.fromVertices(viewport().width/2, viewport().height/2, points, {
    isStatic: true,
    render: {
      fillStyle: "#AA0000",
      strokeStyle: "#AA0000"
    }
  }, true)

  World.add(engine.world, v)

  /*
  $('#svg').find('path').each(function (i, path) {
    // vertexSets.push(Svg.pathToVertices(path, 100));
    console.log(path)
    const vertices = Svg.pathToVertices(path, 20)
    console.log(vertices)
    const v = Bodies.fromVertices(100, 100 + i*100, vertices, {
      isStatic: true,
      render: {
        fillStyle: color,
        strokeStyle: color
      }
    }, true)
    console.log(v)
    vertexSets.push(v)
    // World.add(engine.world, v);
  })*/

// add all of the bodies to the world
//   World.add(engine.world, vertexSets)

// run the engine
  Engine.run(engine)

// run the renderer
  Render.run(render)

})


!function (a) {'object' == typeof exports ? module.exports = a() : 'function' == typeof define && define.amd ? define(a) : 'undefined' != typeof window ? window.decomp = a() : 'undefined' != typeof global ? global.decomp = a() : 'undefined' != typeof self && (self.decomp = a())}(function () {
  return function a (b, c, d) {
    function e (g, h) {
      if (!c[g]) {
        if (!b[g]) {
          var i = 'function' == typeof require && require
          if (!h && i) return i(g, !0)
          if (f) return f(g, !0)
          throw new Error('Cannot find module ' + g)
        }
        var j = c[g] = {exports: {}}
        b[g][0].call(j.exports, function (a) {
          var c = b[g][1][a]
          return e(c ? c : a)
        }, j, j.exports, a, b, c, d)
      }
      return c[g].exports
    }

    for (var f = 'function' == typeof require && require, g = 0; g < d.length; g++) e(d[g])
    return e
  }({
    1: [function (a, b) {
      function c () {}

      var d = a('./Scalar')
      b.exports = c, c.lineInt = function (a, b, c) {
        c = c || 0
        var e, f, g, h, i, j, k, l = [0, 0]
        return e = a[1][1] - a[0][1], f = a[0][0] - a[1][0], g = e * a[0][0] + f * a[0][1], h = b[1][1] - b[0][1], i = b[0][0] - b[1][0], j = h * b[0][0] + i * b[0][1], k = e * i - h * f, d.eq(k, 0, c) || (l[0] = (i * g - f * j) / k, l[1] = (e * j - h * g) / k), l
      }, c.segmentsIntersect = function (a, b, c, d) {
        var e = b[0] - a[0], f = b[1] - a[1], g = d[0] - c[0], h = d[1] - c[1]
        if (0 == g * f - h * e) return !1
        var i = (e * (c[1] - a[1]) + f * (a[0] - c[0])) / (g * f - h * e),
          j = (g * (a[1] - c[1]) + h * (c[0] - a[0])) / (h * e - g * f)
        return i >= 0 && 1 >= i && j >= 0 && 1 >= j
      }
    }, {'./Scalar': 4}],
    2: [function (a, b) {
      function c () {}

      b.exports = c, c.area = function (a, b, c) {return (b[0] - a[0]) * (c[1] - a[1]) - (c[0] - a[0]) * (b[1] - a[1])}, c.left = function (a, b, d) {return c.area(a, b, d) > 0}, c.leftOn = function (a, b, d) {return c.area(a, b, d) >= 0}, c.right = function (a, b, d) {return c.area(a, b, d) < 0}, c.rightOn = function (a, b, d) {return c.area(a, b, d) <= 0}
      var d = [], e = []
      c.collinear = function (a, b, f, g) {
        if (g) {
          var h = d, i = e
          h[0] = b[0] - a[0], h[1] = b[1] - a[1], i[0] = f[0] - b[0], i[1] = f[1] - b[1]
          var j = h[0] * i[0] + h[1] * i[1], k = Math.sqrt(h[0] * h[0] + h[1] * h[1]),
            l = Math.sqrt(i[0] * i[0] + i[1] * i[1]), m = Math.acos(j / (k * l))
          return g > m
        }
        return 0 == c.area(a, b, f)
      }, c.sqdist = function (a, b) {
        var c = b[0] - a[0], d = b[1] - a[1]
        return c * c + d * d
      }
    }, {}],
    3: [function (a, b) {
      function c () {this.vertices = []}

      function d (a, b, c, d, e) {
        e = e || 0
        var f = b[1] - a[1], h = a[0] - b[0], i = f * a[0] + h * a[1], j = d[1] - c[1], k = c[0] - d[0],
          l = j * c[0] + k * c[1], m = f * k - j * h
        return g.eq(m, 0, e) ? [0, 0] : [(k * i - h * l) / m, (f * l - j * i) / m]
      }

      var e = a('./Line'), f = a('./Point'), g = a('./Scalar')
      b.exports = c, c.prototype.at = function (a) {
        var b = this.vertices, c = b.length
        return b[0 > a ? a % c + c : a % c]
      }, c.prototype.first = function () {return this.vertices[0]}, c.prototype.last = function () {return this.vertices[this.vertices.length - 1]}, c.prototype.clear = function () {this.vertices.length = 0}, c.prototype.append = function (a, b, c) {
        if ('undefined' == typeof b) throw new Error('From is not given!')
        if ('undefined' == typeof c) throw new Error('To is not given!')
        if (b > c - 1) throw new Error('lol1')
        if (c > a.vertices.length) throw new Error('lol2')
        if (0 > b) throw new Error('lol3')
        for (var d = b; c > d; d++) this.vertices.push(a.vertices[d])
      }, c.prototype.makeCCW = function () {
        for (var a = 0, b = this.vertices, c = 1; c < this.vertices.length; ++c) (b[c][1] < b[a][1] || b[c][1] == b[a][1] && b[c][0] > b[a][0]) && (a = c)
        f.left(this.at(a - 1), this.at(a), this.at(a + 1)) || this.reverse()
      }, c.prototype.reverse = function () {
        for (var a = [], b = 0, c = this.vertices.length; b !== c; b++) a.push(this.vertices.pop())
        this.vertices = a
      }, c.prototype.isReflex = function (a) {return f.right(this.at(a - 1), this.at(a), this.at(a + 1))}
      var h = [], i = []
      c.prototype.canSee = function (a, b) {
        var c, d, g = h, j = i
        if (f.leftOn(this.at(a + 1), this.at(a), this.at(b)) && f.rightOn(this.at(a - 1), this.at(a), this.at(b))) return !1
        d = f.sqdist(this.at(a), this.at(b))
        for (var k = 0; k !== this.vertices.length; ++k) if ((k + 1) % this.vertices.length !== a && k !== a && f.leftOn(this.at(a), this.at(b), this.at(k + 1)) && f.rightOn(this.at(a), this.at(b), this.at(k)) && (g[0] = this.at(a), g[1] = this.at(b), j[0] = this.at(k), j[1] = this.at(k + 1), c = e.lineInt(g, j), f.sqdist(this.at(a), c) < d)) return !1
        return !0
      }, c.prototype.copy = function (a, b, d) {
        var e = d || new c
        if (e.clear(), b > a) {for (var f = a; b >= f; f++) e.vertices.push(this.vertices[f])} else {
          for (var f = 0; b >= f; f++) e.vertices.push(this.vertices[f])
          for (var f = a; f < this.vertices.length; f++) e.vertices.push(this.vertices[f])
        }
        return e
      }, c.prototype.getCutEdges = function () {
        for (var a = [], b = [], d = [], e = new c, f = Number.MAX_VALUE, g = 0; g < this.vertices.length; ++g) if (this.isReflex(g)) for (var h = 0; h < this.vertices.length; ++h) if (this.canSee(g, h)) {
          b = this.copy(g, h, e).getCutEdges(), d = this.copy(h, g, e).getCutEdges()
          for (var i = 0; i < d.length; i++) b.push(d[i])
          b.length < f && (a = b, f = b.length, a.push([this.at(g), this.at(h)]))
        }
        return a
      }, c.prototype.decomp = function () {
        var a = this.getCutEdges()
        return a.length > 0 ? this.slice(a) : [this]
      }, c.prototype.slice = function (a) {
        if (0 == a.length) return [this]
        if (a instanceof Array && a.length && a[0] instanceof Array && 2 == a[0].length && a[0][0] instanceof Array) {
          for (var b = [this], c = 0; c < a.length; c++) for (var d = a[c], e = 0; e < b.length; e++) {
            var f = b[e], g = f.slice(d)
            if (g) {
              b.splice(e, 1), b.push(g[0], g[1])
              break
            }
          }
          return b
        }
        var d = a, c = this.vertices.indexOf(d[0]), e = this.vertices.indexOf(d[1])
        return -1 != c && -1 != e ? [this.copy(c, e), this.copy(e, c)] : !1
      }, c.prototype.isSimple = function () {
        for (var a = this.vertices, b = 0; b < a.length - 1; b++) for (var c = 0; b - 1 > c; c++) if (e.segmentsIntersect(a[b], a[b + 1], a[c], a[c + 1])) return !1
        for (var b = 1; b < a.length - 2; b++) if (e.segmentsIntersect(a[0], a[a.length - 1], a[b], a[b + 1])) return !1
        return !0
      }, c.prototype.quickDecomp = function (a, b, e, g, h, i) {
        h = h || 100, i = i || 0, g = g || 25, a = 'undefined' != typeof a ? a : [], b = b || [], e = e || []
        var j = [0, 0], k = [0, 0], l = [0, 0], m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = new c, u = new c,
          v = this, w = this.vertices
        if (w.length < 3) return a
        if (i++, i > h) return console.warn('quickDecomp: max level (' + h + ') reached.'), a
        for (var x = 0; x < this.vertices.length; ++x) if (v.isReflex(x)) {
          b.push(v.vertices[x]), m = n = Number.MAX_VALUE
          for (var y = 0; y < this.vertices.length; ++y) f.left(v.at(x - 1), v.at(x), v.at(y)) && f.rightOn(v.at(x - 1), v.at(x), v.at(y - 1)) && (l = d(v.at(x - 1), v.at(x), v.at(y), v.at(y - 1)), f.right(v.at(x + 1), v.at(x), l) && (o = f.sqdist(v.vertices[x], l), n > o && (n = o, k = l, r = y))), f.left(v.at(x + 1), v.at(x), v.at(y + 1)) && f.rightOn(v.at(x + 1), v.at(x), v.at(y)) && (l = d(v.at(x + 1), v.at(x), v.at(y), v.at(y + 1)), f.left(v.at(x - 1), v.at(x), l) && (o = f.sqdist(v.vertices[x], l), m > o && (m = o, j = l, q = y)))
          if (r == (q + 1) % this.vertices.length) { l[0] = (k[0] + j[0]) / 2, l[1] = (k[1] + j[1]) / 2, e.push(l), q > x ? (t.append(v, x, q + 1), t.vertices.push(l), u.vertices.push(l), 0 != r && u.append(v, r, v.vertices.length), u.append(v, 0, x + 1)) : (0 != x && t.append(v, x, v.vertices.length), t.append(v, 0, q + 1), t.vertices.push(l), u.vertices.push(l), u.append(v, r, x + 1)) } else {
            if (r > q && (q += this.vertices.length), p = Number.MAX_VALUE, r > q) return a
            for (var y = r; q >= y; ++y) f.leftOn(v.at(x - 1), v.at(x), v.at(y)) && f.rightOn(v.at(x + 1), v.at(x), v.at(y)) && (o = f.sqdist(v.at(x), v.at(y)), p > o && (p = o, s = y % this.vertices.length))
            s > x ? (t.append(v, x, s + 1), 0 != s && u.append(v, s, w.length), u.append(v, 0, x + 1)) : (0 != x && t.append(v, x, w.length), t.append(v, 0, s + 1), u.append(v, s, x + 1))
          }
          return t.vertices.length < u.vertices.length ? (t.quickDecomp(a, b, e, g, h, i), u.quickDecomp(a, b, e, g, h, i)) : (u.quickDecomp(a, b, e, g, h, i), t.quickDecomp(a, b, e, g, h, i)), a
        }
        return a.push(this), a
      }, c.prototype.removeCollinearPoints = function (a) {
        for (var b = 0, c = this.vertices.length - 1; this.vertices.length > 3 && c >= 0; --c) f.collinear(this.at(c - 1), this.at(c), this.at(c + 1), a) && (this.vertices.splice(c % this.vertices.length, 1), c--, b++)
        return b
      }
    }, {'./Line': 1, './Point': 2, './Scalar': 4}],
    4: [function (a, b) {
      function c () {}

      b.exports = c, c.eq = function (a, b, c) {return c = c || 0, Math.abs(a - b) < c}
    }, {}],
    5: [function (a, b) {b.exports = {Polygon: a('./Polygon'), Point: a('./Point')}}, {'./Point': 2, './Polygon': 3}]
  }, {}, [5])(5)
})

function loadGitHubScript (url) {
  return fetch(url).then(function (res) {
    return res.blob()
  }).then(function (body) {
    return loadScript(URL.createObjectURL(body))
  })
}

function loadScript (url) {
  return new Promise(function (resolve, reject) {
    var script = document.createElement('script')
    script.src = url
    script.onload = resolve
    script.onerror = reject
    document.head.appendChild(script)
  })
}